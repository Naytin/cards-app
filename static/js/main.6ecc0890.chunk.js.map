{"version":3,"sources":["main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/Header/Header.module.scss","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","main/ui/pages/404/Error404.module.scss","main/ui/common/c7-SuperRange/SuperRange.module.scss","main/ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","main/ui/common/c2-SuperButton/SuperButton.tsx","main/bll/reducers/authReducer.ts","main/ui/pages/Login/Login.tsx","main/ui/assets/images/404.jpg","main/ui/pages/404/Error404.tsx","main/bll/reducers/profileReducer.ts","main/ui/pages/Profile/Profile.tsx","main/bll/reducers/registrationReducer.ts","main/ui/pages/Login/Registration.tsx","main/bll/reducers/resetPasswordReducer.ts","main/ui/pages/Login/ResetPassword.tsx","main/bll/reducers/newPasswordReducer.ts","main/ui/pages/Login/NewPassword.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/common/c5-SuperSelect/SuperSelect.tsx","main/ui/common/c6-SuperRadio/SuperRadio.tsx","main/ui/common/c7-SuperRange/SuperRange.tsx","main/ui/common/preloader/Spinner-1s-200px.gif","main/ui/common/preloader/Preloader.tsx","main/ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","main/ui/pages/Tests/Test.tsx","main/ui/routes/Routes.tsx","main/ui/Header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","main/bll/store/store.ts","index.tsx"],"names":["module","exports","SuperButton","red","className","restProps","finalClassName","s","default","SET_USER_DATA","initialState","id","email","login","isAuth","authReducer","state","action","type","payload","Login","store","useSelector","auth","dispatch","useDispatch","alert","onClick","loginUserData","Error404","wrapper","to","src","logo","alt","SET_USER_PROFILE","name","age","profileReducer","Profile","profile","setUserProfile","REGISTRATION_DATA","password","registrationReducer","Registration","registration","setRegistrationData","RESET_PASSWORD","resetUserPasswordReducer","ResetPassword","resetPassword","resetUserPassword","NEW_PASSWORD","newUserPasswordReducer","NewPassword","newPassword","newUserPassword","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","text","currentTarget","value","trim","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","SuperRadio","onChangeCallback","SuperRange","onChangeRange","finalRangeClassName","range","Preloader","preloader","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","SuperInput","Test","React","setRange","min","max","PATH","Routes","path","exact","render","link","active","Header","l","activeClassName","slice","list","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ecc0890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2akhD\",\"errorInput\":\"SuperInputText_errorInput__5ykPb\",\"error\":\"SuperInputText_error__j0cKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Header_list__3CGxy\",\"active\":\"Header_active__359bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1u_qg\",\"spanClassName\":\"SuperCheckbox_spanClassName__mHC93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3hCbd\",\"red\":\"SuperButton_red__3UM0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2KNNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2N9Zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuperInput\":\"SuperEditableSpan_SuperInput__PKpYq\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    // const finalClassName = s.default;\r\n    const finalClassName = `${className ? className : ''} ${s.default}`;\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","const SET_USER_DATA = 'LOGIN/SET_USER_DATA'\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state:AuthStateType = initialState, action: ActionTypes):AuthStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: true}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = ({email,id,login,isAuth}:AuthStateType):AuthUserACType =>\r\n    ({ type: SET_USER_DATA, payload: {email, id,  login, isAuth}} as const)\r\nexport const loginUserData = ({email,id,login,isAuth}:AuthStateType):AuthUserACType =>\r\n    ({ type: SET_USER_DATA, payload: {email, id,  login, isAuth}} as const)\r\n\r\n\r\ntype ActionTypes = ReturnType<typeof setAuthUserData>\r\n\r\nexport type AuthStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport type AuthUserACType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: AuthStateType\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store/store\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport {AuthStateType, loginUserData} from \"../../../bll/reducers/authReducer\";\r\n\r\nconst Login = () => {\r\n    const store = useSelector<AppStoreType, AuthStateType>(store => store.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    if(store.isAuth) {\r\n        alert('welcome')\r\n    }\r\n\r\n    const click = () => {\r\n        let login = {email: '',id: 12, login: 'Naytin', isAuth: true}\r\n        dispatch(loginUserData(login))\r\n    }\r\n    return (<>\r\n            <h1>Login</h1>\r\n            {!store.isAuth && <SuperButton onClick={click}>click to change store</SuperButton>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","export default __webpack_public_path__ + \"static/media/404.41d99d1f.jpg\";","import React from \"react\";\r\nimport logo from '../../assets/images/404.jpg';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Error404.module.scss'\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\n\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <SuperButton ><NavLink to='/profile'>Go to Home</NavLink></SuperButton>\r\n            <img src={logo} alt=\"404\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","const SET_USER_PROFILE = 'PROFILE/SET_USER_PROFILE';\r\n\r\nconst initialState = {\r\n    name: null,\r\n    age: null\r\n}\r\n\r\nconst profileReducer = (state: ProfileStateType = initialState, action: ActionTypes):ProfileStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUserProfile = ({name, age}:ProfileStateType):ProfileACType =>\r\n    ({ type: SET_USER_PROFILE, payload: {name,age}} as const)\r\n\r\n\r\n\r\ntype ActionTypes = ReturnType<typeof setUserProfile>\r\n\r\nexport type ProfileStateType = {\r\n    name: string | null\r\n    age: number | null\r\n}\r\n\r\nexport type ProfileACType = {\r\n    type: typeof SET_USER_PROFILE\r\n    payload: ProfileStateType\r\n};\r\n\r\nexport default profileReducer;","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store/store\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport {ProfileStateType, setUserProfile} from \"../../../bll/reducers/profileReducer\";\r\n\r\nconst Profile = () => {\r\n    const store = useSelector<AppStoreType, ProfileStateType>(store => store.profile)\r\n    const dispatch = useDispatch()\r\n\r\n    const click = () => {\r\n        let login = {name: 'Vova', age: 33}\r\n        dispatch(setUserProfile(login))\r\n    }\r\n    return (<>\r\n            <h1>New password</h1>\r\n            {!store.name && <SuperButton onClick={click}>click to change store</SuperButton>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","const REGISTRATION_DATA = 'LOGIN/REGISTRATION_USER'\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    password: null,\r\n    isAuth: false\r\n}\r\n\r\nconst registrationReducer = (state:RegistrationStateType = initialState, action: ActionTypes): RegistrationStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                id: 12,\r\n                isAuth: true\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setRegistrationData = ({email,password,login}:RegistrationPayloadType):RegistrationUserACType =>\r\n    ({ type: REGISTRATION_DATA, payload: {email, password, login}} as const)\r\n\r\n\r\n\r\n\r\ntype ActionTypes =\r\n    ReturnType<typeof setRegistrationData>\r\n\r\n\r\nexport type RegistrationStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    password: number | string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype RegistrationPayloadType = {\r\n    email: string | null\r\n    password: number | string | null\r\n    login: string | null\r\n\r\n}\r\n\r\nexport type RegistrationUserACType = {\r\n    type: typeof REGISTRATION_DATA\r\n    payload: RegistrationPayloadType\r\n}\r\n\r\nexport default registrationReducer","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store/store\";\r\nimport {RegistrationStateType, setRegistrationData} from \"../../../bll/reducers/registrationReducer\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\n\r\nconst Registration = () => {\r\n    const store = useSelector<AppStoreType, RegistrationStateType>(store => store.registration)\r\n    const dispatch = useDispatch()\r\n\r\n    const click = () => {\r\n        let login = {email: 'email', password: 21212121, login: 'Naytin'}\r\n        dispatch(setRegistrationData(login))\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Registration</h1>\r\n            {!store.isAuth && <SuperButton onClick={click}>click to change store</SuperButton>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Registration;","const RESET_PASSWORD = 'LOGIN/RESET_PASSWORD'\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    password: null,\r\n    isAuth: false\r\n}\r\n\r\nconst resetUserPasswordReducer = (state:ResetPasswordStateType = initialState, action: ActionTypes):ResetPasswordStateType=> {\r\n    switch (action.type) {\r\n        case RESET_PASSWORD:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                id: 12,\r\n                isAuth: true\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\nexport const resetUserPassword = ({email, password, login}: ResetPasswordPayloadType ):ResetPasswordACType =>\r\n    ({ type: RESET_PASSWORD, payload: {email, password, login}} as const)\r\n\r\n\r\n// отправляем пользователю на почту ссылку с поддтверждение почты\r\n// после подтверждения, запрашиваем у пользователя ввести новый пароль\r\n// сетаем в стейт новые данные\r\n\r\n\r\n\r\n\r\ntype ActionTypes =\r\n    ReturnType<typeof resetUserPassword>\r\n\r\n\r\nexport type ResetPasswordStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    password: number | string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype ResetPasswordPayloadType = {\r\n    email: string | null\r\n    password: number | string | null\r\n    login: string | null\r\n\r\n}\r\n\r\nexport type ResetPasswordACType = {\r\n    type: typeof RESET_PASSWORD\r\n    payload: ResetPasswordPayloadType\r\n}\r\n\r\nexport default resetUserPasswordReducer","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store/store\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport {ResetPasswordStateType, resetUserPassword} from \"../../../bll/reducers/resetPasswordReducer\";\r\n\r\nconst ResetPassword = () => {\r\n    const store = useSelector<AppStoreType, ResetPasswordStateType>(store => store.resetPassword)\r\n    const dispatch = useDispatch()\r\n\r\n    const click = () => {\r\n        let login = {email: 'email', password: 21212121, login: 'Naytin'}\r\n        dispatch(resetUserPassword(login))\r\n    }\r\n    return (<>\r\n            <h1>Reset password</h1>\r\n            {!store.isAuth && <SuperButton onClick={click}>click to change store</SuperButton>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","const NEW_PASSWORD = 'LOGIN/NEW_PASSWORD'\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    password: null,\r\n    isAuth: false\r\n}\r\n\r\nconst newUserPasswordReducer = (state:NewPasswordStateType = initialState, action: ActionTypes):NewPasswordStateType=> {\r\n    switch (action.type) {\r\n        case NEW_PASSWORD:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                id: 12,\r\n                isAuth: true\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\nexport const newUserPassword = ({email, password, login}: NewPasswordPayloadType ):NewPasswordACType =>\r\n    ({ type: NEW_PASSWORD, payload: {email, password, login}} as const)\r\n\r\n\r\n// отправляем пользователю на почту ссылку с поддтверждение почты\r\n// после подтверждения, запрашиваем у пользователя ввести новый пароль\r\n// сетаем в стейт новые данные\r\n\r\n\r\n\r\n\r\ntype ActionTypes =\r\n    ReturnType<typeof newUserPassword>\r\n\r\n\r\nexport type NewPasswordStateType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    password: number | string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype NewPasswordPayloadType = {\r\n    email: string | null\r\n    password: number | string | null\r\n    login: string | null\r\n\r\n}\r\n\r\nexport type NewPasswordACType = {\r\n    type: typeof NEW_PASSWORD\r\n    payload: NewPasswordPayloadType\r\n}\r\n\r\nexport default newUserPasswordReducer","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store/store\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport {NewPasswordStateType, newUserPassword} from \"../../../bll/reducers/newPasswordReducer\";\r\n\r\nconst NewPassword = () => {\r\n    const store = useSelector<AppStoreType, NewPasswordStateType>(store => store.newPassword)\r\n    const dispatch = useDispatch()\r\n\r\n    const click = () => {\r\n        let login = {email: 'email', password: 21212121, login: 'Naytin'}\r\n        dispatch(newUserPassword(login))\r\n    }\r\n    return (<>\r\n            <h1>New password</h1>\r\n            {!store.isAuth && <SuperButton onClick={click}>click to change store</SuperButton>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewPassword","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n        let text = e.currentTarget.value.trim()\r\n        onChangeText && onChangeText(text);\r\n\r\n\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o,i) => {\r\n        return <option value={o} key={o + i}>{o}</option>\r\n    })\r\n    : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                onChange={onChangeCallback}\r\n                value={o}\r\n                checked={o === value}\r\n                name={name}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.scss\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n    value: number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n        value,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={value}\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.6f589e28.gif\";","import React from 'react'\r\nimport preloader from './Spinner-1s-200px.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return  <img src={preloader} alt='preloader'/>\r\n\r\n}\r\n\r\nexport default Preloader","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.SuperInput} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React from 'react'\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../common/c7-SuperRange/SuperRange\";\r\n// import SuperDoubleRange from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\r\n\r\nconst Test = () => {\r\n    const [range, setRange] = React.useState<number[]>([0, 100]);\r\n    const [min, max] = [...range]\r\n\r\n    const onChangeRange = (value: number) => {\r\n        setRange([value, max])\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, value: number[] | number) => {\r\n        setRange(value as number[]);\r\n    };\r\n\r\n    const click = () => {\r\n        alert('clicked on SuperButton')\r\n    }\r\n    return (<>\r\n            <h1>ALL Components</h1>\r\n            <div><SuperButton onClick={click}>click me</SuperButton></div>\r\n            <div><SuperInputText/></div>\r\n            <div><SuperCheckbox/></div>\r\n            <div><SuperEditableSpan value={'change text'}/></div>\r\n            <div><SuperSelect options={['one','two', 'three']}/></div>\r\n            <div><SuperRadio/></div>\r\n            <div><SuperRange\r\n                onChangeRange={onChangeRange}\r\n                value={min}\r\n                // сделать так чтоб value1 изменялось\r\n            /></div>\r\n\r\n\r\n            {/*<SuperDoubleRange*/}\r\n            {/*    // value={range}*/}\r\n            {/*    range={range}*/}\r\n            {/*    handleChange={handleChange}*/}\r\n            {/*    // сделать так чтоб value1 и value2 изменялось*/}\r\n            {/*/>*/}\r\n            <Preloader/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Login from \"../pages/Login/Login\";\r\nimport Error404 from \"../pages/404/Error404\";\r\nimport Profile from \"../pages/Profile/Profile\";\r\nimport Registration from \"../pages/Login/Registration\";\r\nimport ResetPassword from \"../pages/Login/ResetPassword\";\r\nimport NewPassword from \"../pages/Login/NewPassword\";\r\nimport Test from \"../pages/Tests/Test\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: \"/registration\",\r\n    PROFILE: \"/profile\",\r\n    RESET_PASSWORD: \"/reset-password\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    TEST: \"/test\",\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n            <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n            <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n            <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n            <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\r\n            <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n            <Route path={PATH.TEST} render={() => <Test/>}/>\r\n            <Route render={() => <Error404/>}/>{/*Если ни один путь не совпадает, рендерит страницу 404*/}\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\nconst initialState = [\r\n    {link: PATH.LOGIN, active: true},\r\n    {link: PATH.REGISTRATION, active: false},\r\n    {link: PATH.PROFILE, active: false},\r\n    {link: PATH.RESET_PASSWORD, active: false},\r\n    {link: PATH.NEW_PASSWORD, active: false},\r\n    {link: PATH.TEST, active: false},\r\n]\r\n\r\nconst Header = () => {\r\n    const link = initialState.map((l,i) => {\r\n        return <li key={i}><NavLink activeClassName={s.active} to={l.link}>{l.link.slice(1)}</NavLink></li>\r\n    })\r\n    return (\r\n        <>\r\n            <ul className={s.list}>\r\n                {link}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport { HashRouter} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1>CARDS-APP</h1>\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport registrationReducer from \"../reducers/registrationReducer\";\r\nimport resetUserPasswordReducer from \"../reducers/resetPasswordReducer\";\r\nimport newUserPasswordReducer from \"../reducers/newPasswordReducer\";\r\nimport profileReducer from \"../reducers/profileReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    registration: registrationReducer,\r\n    resetPassword: resetUserPasswordReducer,\r\n    newPassword: newUserPasswordReducer,\r\n    profile: profileReducer\r\n})\r\n\r\n\r\n//for redux-devtool\r\n// @ts-ignore\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\nconst store = createStore(reducers,composeEnhancers())\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./main/bll/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}