{"version":3,"sources":["main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/Header/Header.module.scss","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/pages/404/Error404.module.scss","main/ui/common/c2-SuperButton/SuperButton.module.css","main/ui/common/c7-SuperRange/SuperRange.module.scss","main/ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","main/ui/common/MessageInform/MessageInform.module.scss","main/ui/common/Button/Button.module.scss","main/ui/pages/SuperComponents/SuperComponents.module.scss","main/ui/pages/Login/Login.tsx","main/ui/assets/images/404.jpg","main/ui/common/c2-SuperButton/SuperButton.tsx","main/ui/pages/404/Error404.tsx","main/ui/pages/Profile/Profile.tsx","main/ui/pages/Login/Registration.tsx","main/ui/pages/Login/ResetPassword.tsx","main/ui/pages/Login/NewPassword.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/common/c5-SuperSelect/SuperSelect.tsx","main/ui/common/c6-SuperRadio/SuperRadio.tsx","main/ui/common/c7-SuperRange/SuperRange.tsx","main/ui/common/preloader/Spinner-1s-200px.gif","main/ui/common/preloader/Preloader.tsx","main/ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","main/ui/common/MessageInform/MessageInform.tsx","main/ui/common/Button/Button.tsx","main/ui/pages/SuperComponents/SuperComponents.tsx","main/ui/routes/Routes.tsx","main/ui/Header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","main/bll/reducers/authReducer.ts","main/bll/reducers/registrationReducer.ts","main/bll/reducers/resetPasswordReducer.ts","main/bll/reducers/newPasswordReducer.ts","main/bll/reducers/profileReducer.ts","main/bll/store/store.ts","index.tsx"],"names":["module","exports","Login","SuperButton","red","className","restProps","finalClassName","s","default","Error404","wrapper","to","src","logo","alt","Profile","Registration","ResetPassword","NewPassword","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","text","currentTarget","value","trim","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","SuperRadio","name","onChangeCallback","SuperRange","onChangeRange","finalRangeClassName","range","Preloader","preloader","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","SuperInput","MessageInform","React","memo","box__message","Button","SuperComponents","setRange","setValue","min","max","onClick","alert","console","log","style","position","display","justifyContent","marginBottom","PATH","Routes","path","exact","render","initialState","link","active","Header","l","activeClassName","slice","list","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","authReducer","state","action","registrationReducer","resetUserPasswordReducer","newUserPasswordReducer","profileReducer","reducers","combineReducers","auth","registration","resetPassword","newPassword","profile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8795115.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2akhD\",\"errorInput\":\"SuperInputText_errorInput__5ykPb\",\"error\":\"SuperInputText_error__j0cKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Header_list__3CGxy\",\"active\":\"Header_active__359bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1u_qg\",\"spanClassName\":\"SuperCheckbox_spanClassName__mHC93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2KNNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3hCbd\",\"red\":\"SuperButton_red__3UM0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2N9Zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuperInput\":\"SuperEditableSpan_SuperInput__PKpYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box__message\":\"MessageInform_box__message__222q3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2SbJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SuperComponents_wrapper__2cnii\"};","import React from 'react'\r\n\r\nconst Login = () => {\r\n\r\n    return (<>\r\n            <h1>Login</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","export default __webpack_public_path__ + \"static/media/404.41d99d1f.jpg\";","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    // const finalClassName = s.default;\r\n    const finalClassName = `${className ? className : ''} ${s.default}`;\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport logo from '../../assets/images/404.jpg';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Error404.module.scss'\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\n\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <SuperButton ><NavLink to='/profile'>Go to Home</NavLink></SuperButton>\r\n            <img src={logo} alt=\"404\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react'\r\n\r\n\r\nconst Profile = () => {\r\n    return (<>\r\n            <h1>New password</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <>\r\n            <h1>Registration</h1>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Registration;","import React from 'react'\r\n\r\nconst ResetPassword = () => {\r\n\r\n    return (<>\r\n            <h1>Reset password</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import React from 'react'\r\n\r\nconst NewPassword = () => {\r\n\r\n    return (<>\r\n            <h1>New password</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewPassword","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n        let text = e.currentTarget.value.trim()\r\n        onChangeText && onChangeText(text);\r\n\r\n\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o,i) => {\r\n        return <option value={o} key={o + i}>{o}</option>\r\n    })\r\n    : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                onChange={onChangeCallback}\r\n                value={o}\r\n                checked={o === value}\r\n                name={name}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.scss\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n    value: number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n        value,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={value}\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.6f589e28.gif\";","import React from 'react'\r\nimport preloader from './Spinner-1s-200px.gif';\r\n\r\n\r\nconst Preloader = () => {\r\n    return  <img src={preloader} alt='preloader'/>\r\n\r\n}\r\n\r\nexport default Preloader","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.SuperInput} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, { HTMLAttributes} from 'react'\r\nimport s from './MessageInform.module.scss'\r\n\r\n\r\n\r\nconst MessageInform: React.FC<HTMLAttributes<HTMLDivElement>> = React.memo(({\r\n                                      className,\r\n                                      ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n                                  }) => {\r\n\r\n    const finalClassName = `${className ? className : ''} ${s.box__message}`;\r\n    return <div className={finalClassName} {...restProps}/>\r\n})\r\n\r\nexport default MessageInform","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./Button.module.scss\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst Button: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    // const finalClassName = s.default;\r\n    const finalClassName = `${className ? className : ''} ${s.default}`;\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n})\r\n\r\nexport default Button;\r\n","import React, {ChangeEvent} from 'react'\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../common/c7-SuperRange/SuperRange\";\r\n// import SuperDoubleRange from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport MessageInform from \"../../common/MessageInform/MessageInform\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport s from './SuperComponents.module.scss'\r\n\r\n\r\nconst SuperComponents = () => {\r\n    const [range, setRange] = React.useState<number[]>([0, 100]);\r\n    const [value, setValue] = React.useState<string>('Change');\r\n    const [min, max] = [...range]\r\n\r\n    const onChangeRange = (value: number) => {\r\n        setRange([value, max])\r\n    }\r\n\r\n    const changeValue = (e: any) => {\r\n        console.log(e.currentTarget.value)\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, value: number[] | number) => {\r\n        setRange(value as number[]);\r\n    };\r\n\r\n    const click = () => {\r\n        alert('clicked on SuperButton')\r\n    }\r\n    return (<div className={s.wrapper}>\r\n            <h1>ALL Components</h1>\r\n            <div><SuperButton onClick={click}>click me</SuperButton></div>\r\n            <div><Button >Button</Button></div>\r\n            <div><SuperInputText/></div>\r\n            <div><SuperCheckbox/></div>\r\n            <div><SuperEditableSpan value={value} onChange={changeValue}/></div>\r\n            <div><SuperSelect options={['one','two', 'three']}/></div>\r\n            <div><SuperRadio/></div>\r\n            <div><SuperRange\r\n                onChangeRange={onChangeRange}\r\n                value={min}\r\n                // сделать так чтоб value1 изменялось\r\n            /></div>\r\n            <div style={{position: 'relative', display: 'flex', justifyContent: 'center', marginBottom: '100px'}}><MessageInform>Error Message</MessageInform></div>\r\n\r\n            {/*<SuperDoubleRange*/}\r\n            {/*    // value={range}*/}\r\n            {/*    range={range}*/}\r\n            {/*    handleChange={handleChange}*/}\r\n            {/*    // сделать так чтоб value1 и value2 изменялось*/}\r\n            {/*/>*/}\r\n            <Preloader/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperComponents","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Login from \"../pages/Login/Login\";\r\nimport Error404 from \"../pages/404/Error404\";\r\nimport Profile from \"../pages/Profile/Profile\";\r\nimport Registration from \"../pages/Login/Registration\";\r\nimport ResetPassword from \"../pages/Login/ResetPassword\";\r\nimport NewPassword from \"../pages/Login/NewPassword\";\r\nimport SuperComponents from '../pages/SuperComponents/SuperComponents';\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: \"/registration\",\r\n    PROFILE: \"/profile\",\r\n    RESET_PASSWORD: \"/reset-password\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    TEST: \"/test\",\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n            <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n            <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n            <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n            <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\r\n            <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n            <Route path={PATH.TEST} render={() => <SuperComponents/>}/>\r\n            <Route render={() => <Error404/>}/>{/*Если ни один путь не совпадает, рендерит страницу 404*/}\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\nconst initialState = [\r\n    {link: PATH.LOGIN, active: true},\r\n    {link: PATH.REGISTRATION, active: false},\r\n    {link: PATH.PROFILE, active: false},\r\n    {link: PATH.RESET_PASSWORD, active: false},\r\n    {link: PATH.NEW_PASSWORD, active: false},\r\n    {link: PATH.TEST, active: false},\r\n]\r\n\r\nconst Header = () => {\r\n    const link = initialState.map((l,i) => {\r\n        return <li key={i}><NavLink activeClassName={s.active} to={l.link}>{l.link.slice(1)}</NavLink></li>\r\n    })\r\n    return (\r\n        <>\r\n            <ul className={s.list}>\r\n                {link}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport { HashRouter} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1>CARDS-APP</h1>\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action: any): {}=> {\r\n    switch (action.type) {\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer","\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nconst registrationReducer = (state = initialState, action: any): {} => {\r\n    switch (action.type) {\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default registrationReducer","\r\n\r\nconst initialState = {\r\n}\r\n\r\nconst resetUserPasswordReducer = (state = initialState, action: any):{}=> {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default resetUserPasswordReducer","\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nconst newUserPasswordReducer = (state= initialState, action: any): {} => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default newUserPasswordReducer","\r\n\r\nconst initialState = {}\r\n\r\n\r\nconst profileReducer = (state = initialState, action: any):{} => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\nexport default profileReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport registrationReducer from \"../reducers/registrationReducer\";\r\nimport resetUserPasswordReducer from \"../reducers/resetPasswordReducer\";\r\nimport newUserPasswordReducer from \"../reducers/newPasswordReducer\";\r\nimport profileReducer from \"../reducers/profileReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    registration: registrationReducer,\r\n    resetPassword: resetUserPasswordReducer,\r\n    newPassword: newUserPasswordReducer,\r\n    profile: profileReducer\r\n})\r\n\r\n\r\n//for redux-devtool\r\n// @ts-ignore\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\nconst store = createStore(reducers,composeEnhancers())\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./main/bll/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}